{
    "1": {
        "1": {
            "text": "В кодировке КОИ-8 каждый символ кодируется 8 битами. Андрей написал текст (в нем нет лишних пробелов):\n\n«Обь, Лена, Волга, Москва, Макензи, Амазонка  — реки».\n\nУченик вычеркнул из списка название одной из рек. Заодно он вычеркнул ставшие лишними запятые и пробелы  — два пробела не должны идти подряд.\n\nПри этом размер нового предложения в данной кодировке оказался на 8 байтов меньше, чем размер исходного предложения. Напишите в ответе вычеркнутое название реки.\n\n<i>Решение.</i>\nПоскольку один символ кодируется одним байтом, из текста удалили 8 символов. Заметим, что лишние запятая и пробел занимают два байта. Значит, название реки, которое удалили из списка, должно состоять из 6 букв. Из всего списка только одно название реки состоит из 6 букв  — Москва.\n\n<i>Ответ: <b>Москва</b>.</i>",
            "image": "None"
        },
        "2": {
            "text": "В одной из кодировок Unicode каждый символ кодируется 16 битами. Вова написал текст (в нем нет лишних пробелов):\n\n«еж, лев, слон, олень, тюлень, носорог, крокодил, аллигатор  — дикие животные».\n\nУченик вычеркнул из списка название одного из животных. Заодно он вычеркнул ставшие лишними запятые и пробелы  — два пробела не должны идти подряд.\n\nПри этом размер нового предложения в данной кодировке оказался на 16 байт меньше, чем размер исходного предложения. Напишите в ответе вычеркнутое название животного.\n\nРешение.\nПоскольку один символ кодируется двумя байтами, из текста удалили 8 символов. Заметим, что лишние запятая и пробел занимают четыре байта. Значит, название животного, которое удалили из списка, должно состоять из шести букв, поскольку (16 − 4) : 2  =  6 символов. Из всего списка только одно название животного состоит из 6 букв  — тюлень.\n\nОтвет: тюлень.",
            "image": "None"
        },
        "3": {
            "text": "В кодировке UTF-32 каждый символ кодируется 32 битами. Миша написал текст (в нем нет лишних пробелов):\n\n«Айва, Алыча, Генипа, Гуарана, Курбарил, Мангостан  — фрукты».\n\nУченик вычеркнул из списка название одного из фруктов. Заодно он вычеркнул ставшие лишними запятые и пробелы  — два пробела не должны идти подряд.\n\nПри этом размер нового предложения в данной кодировке оказался на 36 байтов меньше, чем размер исходного предложения. Напишите в ответе вычеркнутое название фрукта.\n\nРешение.\nПоскольку один символ кодируется четырьмя байтами, из текста удалили 9 символов. Заметим, что лишние запятая и пробел занимают восемь байтов. Значит, название фрукта, которое удалили из списка, должно состоять из 7 букв, поскольку (36 − 8) : 4  =  7 символов. Из всего списка только одно название фрукта состоит из 7 букв  — Гуарана.\n\nОтвет: Гуарана.",
            "image": "None"
        },
        "4": {
            "text": "Рассказ, набранный на компьютере, содержит 8 страниц, на каждой странице 40 строк, в каждой строке 48 символов. Определите информационный объем рассказа в Кбайтах в кодировке Windows, в которой каждый символ кодируется 8 бит.\n\nРешение.\nНайдем количество символов в рассказе:\n\n8 · 40 · 48 = 2^3 · 5 · 2^3 · 3 · 2^4 = 15 · 2^10.\nОдин символ кодируется одним байтом, 210 байт составляют 1 Кбайт, поэтому информационный объем статьи составляет\n1 · 15 ·  2^10 байт = 15 Кбайт.\nОтвет: 15.",
            "image": "None"
        }
    },
    "2": {
        "1": {
            "text": "Вася и Петя играли в шпионов и кодировали сообщения собственным шифром. Фрагмент кодовой таблицы приведен ниже:\n\nРасшифруйте сообщение, если известно, что буквы в нем не повторяются: + ~ + ~+@@~ +\n\nЗапишите в ответе расшифрованное сообщение.\nРешение.\nСопоставляя символы их кодам, расшифруем сообщение:\n+ ~ + ~+@@~ +  =  ОЛИМП.\n",
            "image": "image_2_1.png"
        },
        "2": {
            "text": "Валя шифрует русские слова (последовательности букв), записывая вместо каждой буквы ее код:\n\nНекоторые цепочки можно расшифровать не одним способом. Например, 00010101 может означать не только СКА, но и СНК. Даны три кодовые цепочки:\n\n10111101\n1010110\n10111000\n\nНайдите среди них ту, которая имеет только одну расшифровку, и запишите в ответе расшифрованное слово.\nРешение.\nПроанализируем каждый вариант ответа:\n\n1)  «10111101» может означать как «КОА», так и «НОК».\n\n2)  «1010110» может означать как «КАН», так и «НКН».\n\n3)  «10111000» может означать только «НОС».\nСледовательно, ответ «НОС».",
            "image": "image_2_2.png"
        }
    },
    "3": {
        "1": {
            "text": "Напишите наибольшее целое число x, для которого истинно высказывание:\n\nНЕ (X <= 15) И (X < 20).\nРешение.\nЗапишем выражение в виде\n(X > 15) И (X < 20).\nЗначит, наибольшее число, для которого высказывание будет истинным  — 19.\nОтвет: 19.",
            "image": "None"
        },
        "2": {
            "text": "Напишите наименьшее целое число x, для которого истинно высказывание:\n\nНЕ (X < 2) И (X < 5).\nРешение.\nЗапишем выражение в виде\n(X >= 2) И (X < 5).\n\nЗначит, наименьшее число, для которого высказывание будет истинным  — 2.\nОтвет: 2.",
            "image": "None"
        },
        "3": {
            "text": "Напишите число X, для которого истинно высказывание:\n\n(X < 8) И НЕ (X < 7).\nРешение.\nЛогическое «И» истинно тогда, когда истинны оба высказывания. Запишем выражение в виде\n(X < 8) И (X ≥ 7).\nЗначит, число, для которого высказывание будет истинным  — 7.\nОтвет: 7.",
            "image": "None"
        }
    },
    "4": {
        "1": {
            "text": "На схеме нарисованы дороги между четырьмя населенными пунктами A, B, C, D и указаны протяженности данных дорог.\n\nОпределите, какие два пункта наиболее удалены друг от друга (при условии, что передвигаться можно только по указанным на схеме дорогам). В ответе укажите кратчайшее расстояние между этими пунктами.\nРешение.\nДва пункта считаются наиболее удаленными друг от друга, если длина кратчайшего пути между этими пунктами больше, чем длина кратчайшего пути между любыми другими двумя пунктами.\nНайдем длины кратчайших путей между каждой парой пунктов:\nВ—С: 6 км.\nВ—D: 4 км.\nС—D: 8 км.\nА—В: 9 км.\nА—С: 7 км.\nА—D: прямого пути нет, рассмотрим разные маршруты:\nA—B—D: длина маршрута 13 км.\nA—C—D: длина маршрута 15 км.\nA—B—C—D: длина маршрута 23 км.\nA—C—B—D: длина маршрута 17 км.\nСледовательно, кратчайший маршрут из А в D составляет 13 км.\nТаким образом, наиболее удалены друг от друга пункты А и D, и кратчайшее расстояние между ними составляет 13 км.\nОтвет: 13.",
            "image": "image_4_1.png"
        },
        "2": {
            "text": "Между населенными пунктами А, В, С, D, Е построены дороги, протяженность которых (в километрах) приведена в таблице:\n\nОпределите длину кратчайшего пути между пунктами А и E. Передвигаться можно только по дорогам, протяженность которых указана в таблице.\nРешение.\nНайдем все варианты маршрутов из A в E и выберем самый короткий.\n\nИз пункта A можно попасть в пункт B.\nИз пункта B можно попасть в пункты C, D, E.\nИз пункта C можно попасть в пункт E.\nИз пункта D можно попасть в пункт E.\n\nA—B: длина маршрута 1 км.\nA—B—C—E: длина маршрута 6 км.\nA—B—D—E: длина маршрута 7 км.\nA—B—E: длина маршрута 8 км.\n\nСамый короткий путь: A—B—C—E. Длина маршрута 6 км.\nОтвет: 6.",
            "image": "image_4_2.png"
        }
    },
    "5": {
        "1": {
            "text": "У исполнителя Альфа две команды, которым присвоены номера:\n\n1. прибавь 1;\n2. умножь на b\n\n(b  — неизвестное натуральное число; b ≥ 2).\n\nВыполняя первую из них, Альфа увеличивает число на экране на 1, а выполняя вторую, умножает это число на b. Программа для исполнителя Альфа  — это последовательность номеров команд. Известно, что программа 11211 переводит число 6 в число 82. Определите значение b.\nРешение.\nЗаметим, что после выполнения первых двух команд мы получаем число 8. Далее, составим и решим уравнение:\n\nОтвет: 10.",
            "image": "image_5_1.png"
        },
        "2": {
            "text": "У исполнителя Сигма две команды, которым присвоены номера:\n\n1. прибавь 1;\n2. раздели на b\n(b  — неизвестное натуральное число; b ≥ 2).\n\nВыполняя первую из них, Сигма увеличивает число на экране на 1, а выполняя вторую, делит это число на b. Программа для исполнителя Сигма  — это последовательность номеров команд. Известно, что программа 12111 переводит число 63 в число 11. Определите значение b.\nРешение.\n\nЗаметим, что после выполнения первой команды мы получаем число 64. Далее, составим и решим уравнение:\nОтвет: 8.",
            "image": "image_5_2.png"
        }
    },
    "6": {
        "1": {
            "text": "Было проведено 9 запусков программы, при которых в качестве значений переменных s и t вводились следующие пары чисел:\n\n(1, 2); (11, 2); (1, 12); (11, 12); (–11, –12); (–11, 12); (–12, 11); (10, 10); (10, 5).\n\nСколько было запусков, при которых программа напечатала «YES»?\nРешение.\n\nЗаметим, что программа напечатает «YES», если одна из введенных переменных s или t будет больше 10. Значит, было 5 запусков, при которых программа напечатала «YES». В качестве значений переменных s и t в этих случаях вводились следующие пары чисел:\n\n(11, 2); (1, 12); (11, 12); (–11, 12); (–12, 11).\nОтвет: 5.",
            "image": "image_6_1.png"
        }
    },
    "7": {
        "1": {
            "text": "На месте преступления были обнаружены четыре обрывка бумаги. Следствие установило, что на них записаны фрагменты одного IP-адреса. Криминалисты обозначили эти фрагменты буквами А, Б, В и Г:\n\nВосстановите IP-адрес. В ответе укажите последовательность букв, обозначающих фрагменты, в порядке, соответствующем IP-адресу.\nРешение.\n\nIP-адрес представляет собой четыре разделенных точками числа, каждое из которых не больше 255.\n\nПод буквой В указано «.65». Так как числа в IP-адресе не могут быть больше 255, нельзя добавить в конце этого числа еще один разряд. Следовательно, этот фрагмент  — последний.\n\nРассмотрим фрагмент под буквой Б. Так как числа в IP-адресе не могут быть больше 255, фрагмент Б должен быть на первом месте.\n\nВ конце фрагмента Г  — число 121, отделенное точкой. Так как в IP-адресе не может быть числа, большего 255, то за фрагментом Г должен следовать фрагмент, начинающийся с точки. Значит, фрагмент Г идет перед фрагментом В.\n\nСледовательно, ответ БАГВ.",
            "image": "image_7_1.png"
        },
        "2": {
            "text": "На сервере GorodN.ru находится почтовый ящик wait_for_mail. Фрагменты адреса электронной почты закодированы буквами от А до Е. Запишите последовательность букв, кодирующую этот адрес.\n\nА)  GorodN\n\nБ)  mail\n\nВ)  for_\n\nГ)  .ru\n\nД)  wait_\n\nЕ)  @\n\nРешение.\nНапомним, как формируется почтовый адрес в сети Интернет. Сначала указывается имя почтового ящика, потом «@», потом сервер, на котором находится почтовый ящик. Таким образом, искомый адрес будет следующим: wait_for_mail@GorodN.ru.\n\nОтвет: ДВБЕАГ.",
            "image": "None"
        },
        "3": {
            "text": "Доступ к файлу slon.txt, находящемуся на сервере circ.org, осуществляется по протоколу http. Фрагменты адреса файла закодированы буквами от А до Ж. Запишите последовательность этих букв, кодирующую адрес указанного файла в сети Интернет.\n\nA)  .txt\n\nБ)  ://\n\nB)  http\n\nГ)  circ\n\nД)  / \n\nЕ)  .org\n\nЖ)  slon\n\nРешение.\nНапомним, как формируется адрес в сети Интернет. Сначала указывается протокол (как правило это «ftp» или «http»), потом «://», потом сервер, затем «/», название файла указывается в конце. Таким образом, адрес будет следующим: http://circ.org/slon.txt. \nСледовательно, ответ ВБГЕДЖА.",
            "image": "None"
        }
    },
    "8": {
        "1": {
            "text": "В языке запросов поискового сервера для обозначения логической операции «ИЛИ» используется символ «|», а для обозначения логической операции «И»  — символ «&».\n\nВ таблице приведены запросы и количество найденных по ним страниц некоторого сегмента сети Интернет.\n Запрос\tНайдено страниц(в тысячах)\nУгол | Прямая\t180\nУгол\t60\nПрямая\t140\n\nКакое количество страниц (в тысячах) будет найдено по запросу\n\nУгол & Прямая?\n\nСчитается, что все запросы выполнялись практически одновременно, так что набор страниц, содержащих все искомые слова, не изменялся за время выполнения запросов.\n\nРешение.\nПредставим таблицу в виде кругов Эйлера. Пусть Угол  — круг 1, Прямая  — круг 3. Тогда задача  — найти количество элементов N в области 2: N2. По таблице известно:\n\nN1 + N2 + N3  =  180 (1),\n\nN1 + N2  =  60 (2),\n\nN2 + N3  =  140 (3).\n\nПодставим второе уравнение в первое и найдем N3: N3  =  180 − 60  =  120. Таким образом, по запросу Угол & Прямая будет найдено N2  =  140 − 120  =  20 тысяч страниц.\n\nОтвет: 20.",
            "image": "image_8_1.png"
        },
        "2": {
            "text": "В языке запросов поискового сервера для обозначения логической операции «ИЛИ» используется символ «|», а для обозначения логической операции «И»  — символ «&».\n\nВ таблице приведены запросы и количество найденных по ним страниц некоторого сегмента сети Интернет.\nЗапрос\tНайдено страниц(в тысячах)\nРыбак | Рыбка\t780\nРыбак\t260\nРыбак & Рыбка\t50\n\nКакое количество страниц (в тысячах) будет найдено по запросу\n\nРыбка?\n\nСчитается, что все запросы выполнялись практически одновременно, так что набор страниц, содержащих все искомые слова, не изменялся за время выполнения запросов.\n\nРешение.\n\nПредставим таблицу в виде кругов Эйлера. Пусть Рыбак  — круг 1, Рыбка  — круг 3. Тогда задача  — найти количество элементов N в областях 2 и 3: N2 + N3. По таблице известно:\n\nN1 + N2 + N3  =  780(1),\n\nN1 + N2  =  260 (2),\n\nN2  =  50.\n\nПодставим второе уравнение в первое и найдем N3: N3  =  780 − 260  =  520. Таким образом, по запросу Рыбка будет найдено N2 + N3  =  50 + 520  =  570 тысяч страниц.\n\nОтвет: 570.",
            "image": "image_8_2.png"
        }
    },
    "9": {
        "1": {
            "text": "На рисунке  — схема дорог, связывающих города А, Б, В, Г, Д, Е, Ж, К и Л. По каждой дороге можно двигаться только в одном направлении, указанном стрелкой. Сколько существует различных путей из города А в город Л?\n\nРешение.\n\nКоличество путей до города X  =  количество путей добраться в любой из тех городов, из которых есть дорога в Х.\n\nС помощью этого наблюдения посчитаем последовательно количество путей до каждого из городов:\n\nА = 1;\n\nБ = А = 1;\n\nВ = А + Б = 1 + 1 = 2;\n\nД = А = 1;\n\nГ = А + Д = 1 + 1 = 2;\n\nЕ = Б + В = 1 + 2 = 3;\n\nЖ = Д + Г = 1 + 2 = 3;\n\nЗ = В + Г + Е + Ж = 2 + 2 + 3 + 3 = 10;\n\nИ = Е = 3;\n\nК = Ж = 3;\n\nЛ = Е + Ж + З + И + К = 3 + 3 + 10 + 3 + 3 = 22.\n\nОтвет: 22.",
            "image": "image_9_1.png"
        },
        "2": {
            "text": "На рисунке  — схема дорог, связывающих города А, Б, В, Г, Д, Е, Ж и К. По каждой дороге можно двигаться только в одном направлении, указанном стрелкой. Сколько существует различных путей из города А в город К, проходящих через город В?\n\nРешение.\n\nКоличество путей до города Х  =  количество путей добраться в любой из тех городов, из которых есть дорога в Х.\n\nПри этом если путь должен не проходить через какой-то город, нужно просто не учитывать этот город при подсчете сумм. А если город, наоборот, обязательно должен лежать на пути, тогда для городов, в которые из нужного города идут дороги, в суммах нужно брать только этот город.\n\nС помощью этого наблюдения посчитаем последовательно количество путей до каждого из городов:\n\nА = 1\n\nБ = А = 1\n\nВ = А + Б = 2\n\nГ = В = 2 (А не учитываем, поскольку путь должен проходить через город В)\n\nД = В = 2 (Б не учитываем, поскольку путь должен проходить через город В)\n\nЕ = В + Д = 4\n\nЖ = В + Г = 4\n\nК = Д + Е + Ж = 2 + 4 + 4 = 10.\n\nПриведем другое решение.\n\nКоличество путей из города А в город К, проходящих через город В, равно произведению количества путей из города А в город В и количества путей из города В в город К.\n\nНайдем количество путей из города А в город В:\n\nА = 1\n\nБ = А = 1\n\nВ = А + Б = 2\n\nНайдем количество путей из города В в город К (при этом В - исходный пункт):\n\nВ = 1\n\nГ = В = 1\n\nЖ = В + Г =1 + 1 = 2\n\nД = В = 1\n\nЕ = В + Д = 1 + 1 = 2\n\nК = Д + Е + Ж = 1 + 2 + 2 = 5\n\nТогда количество путей из города А в город К, проходящих через город В, равно 2 · 5 = 10.\n\nОтвет: 10.",
            "image": "image_9_2.png"
        }
    },
    "10": {
        "1": {
            "text": "Переведите двоичное число 1100110 в десятичную систему счисления.\n\nРешение.\n\nИмеем:\n\n1100110₂ = 1 · 2^6 + 1 · 2^5 + 1 · 2^2 + 1 · 2^1  =   64 + 32 + 4 + 2  =  102.\n\nОтвет: 102.",
            "image": "None"
        },
        "2": {
            "text": "Среди приведенных ниже трех чисел, записанных в различных системах счисления, найдите максимальное и запишите его в ответе в десятичной системе счисления. В ответе запишите только число, основание системы счисления указывать не нужно.\n\n23₁₆, 32₈, 11110₂.\n\nРешение.\nПереведем все числа в десятичную систему счисления:\n\n1.  23₁₆  =  35;\n\n2.  32₈  =  26;\n\n3.  11110₂  =  30.\n\nТаким образом, наибольшим среди этих трех чисел является число 35.\n\nОтвет: 35.",
            "image": "None"
        },
        "3": {
            "text": "Среди приведенных ниже трех чисел, записанных в десятичной системе счисления, найдите число, сумма цифр которого в восьмеричной записи наименьшая. В ответе запишите сумму цифр в восьмеричной записи этого числа.55, 83, 91.\n\nРешение.\n\nПереведем все числа в восьмеричную систему счисления:\n\n1.  55 = 67₈, сумма цифр  — 6 + 7 = 15₈;\n\n2.  83 = 123₈ , сумма цифр  — 1 + 2 + 3 = 6₈;\n\n3.  91 = 133₈ , сумма цифр  — 1 + 3 + 3 = 7₈.\n\nТаким образом, наименьшей суммой цифр в восьмеричной записи числа является число 6.\n\nОтвет: 6.",
            "image": "None"
        }
    },
    "11": {
        "1": {
            "text": "В одном из произведений И. С. Тургенева, текст которого приведен в подкаталоге Тургенев каталога DEMO-12, присутствует эпизод, происходящий на речке Гнилотерке. С помощью поисковых средств операционной системы и текстового редактора выясните фамилию главного героя этого произведения.\n\nВыполните задание, распаковав архив на своем компьютере.\n\nРешение.\n\nСпустимся в подкаталог Тургенев каталога DEMO-12. В строке поиска введем «Гнилотерк». Таким образом, найдем файл Записки охотника. В этом файле с помощью поисковых средств текстового редактора найдем фрагмент, где упоминается речка Гнилотерка. Это фрагмент из произведения «Однодворец Овсянников». Значит, фамилия главного героя этого произведения  — Овсяников.\n\nПримечание\n\nВ тексте указана фамилия главного героя с одной -н  — Овсяников, а фрагмент произведения с удвоенной -нн  — «Дворец Овсянников».\n\nОтвет: Овсяников.",
            "image": "None"
        }
    },
    "12": {
        "1": {
            "text": "Сколько файлов с расширением .txt содержится в подкаталогах каталога Проза? В ответе укажите только число.\n\nВыполните задание, распаковав архив на своем компьютере.\n\nDEMO-12.rar\n\nРешение.\n\nСпустимся в каталог Проза. В строке поиска введем «*.txt», где символ *  — любое количество символов. Результатом поискового запроса будет список всех файлов в подкаталогах каталога Проза с расширением .txt. Таких файлов 16.\n\nОтвет: 16.",
            "image": "None"
        },
        "2": {
            "text": "Сколько файлов с расширением htm объемом не менее 1024 Кб каждый содержится в подкаталогах каталога DEMO-12? В ответ укажите только число.\n\nВыполните задание, распаковав архив на своем компьютере.\n\nФайлы 12.rar\n\nРешение.\n\nСпустимся в каталог DEMO-12. В строке поиска введем «*.'htm'», где символ *  — любое количество символов. Результатом поискового запроса будет список всех файлов в подкаталогах каталога DEMO-12 с расширением .htm. Таких файлов 25. Из них объемом не менее 1024 Кб:\n\n1.  Чехов Антон Павлович - Полное собрание рассказов.htm (1,92 Мб);\n\n2.  А. П. Чехов - Палата №6. Сборник.htm (1,15 Мб);\n\n3.  Достоевский Ф. М. - Идиот.htm (1,31 Мб).\n\nОтвет: 3.",
            "image": "None"
        }
    },
    "13": {
        "1": {
            "text": "Требования к оформлению презентации:\n\n 1.  Ровно три слайда без анимации. Параметры страницы (слайда): экран (16:9), ориентация альбомная.\n\n2.  Содержание, структура, форматирование шрифта и размещение изображений на слайдах:\n\n● первый слайд  — титульный слайд с названием презентации; в подзаголовке титульного слайда в качестве информации об авторе презентации указывается идентификационный номер участника экзамена;\n\n● второй слайд  — основная информация в соответствии с заданием, размещенная по образцу на рисунке макета слайда 2:\n\n− заголовок слайда;\n\n− два блока текста;\n\n− два изображения;\n\n● третий слайд  — дополнительная информация по теме презентации, размещенная по образцу на рисунке макета слайда 3:\n\n− заголовок слайда;\n\n− три изображения;\n\n− три блока текста.\n\nНа макетах слайдов существенным является наличие всех объектов, включая заголовки, их взаимное расположение. Выравнивание объектов, ориентация изображений выполняются произвольно в соответствии с замыслом автора работы и служат наилучшему раскрытию темы.\n\n\n\nТребования к оформлению текстовых документов и презентаций: https://oge.sdamgia.ru/doc/pamyatka.pdf",
            "image": "None"
        }
    },
    "14": {
        "1": {
            "text": "В электронную таблицу занесли данные о тестировании учеников по выбранным ими предметам.\n\nВ столбце A записан код округа, в котором учится ученик; в столбце B  — фамилия, в столбце C  — выбранный учеником предмет; в столбце D  — тестовый балл. Всего в электронную таблицу были занесены данные по 1000 учеников.\n\nВыполните задание.\n\nОткройте файл с данной электронной таблицей. На основании данных, содержащихся в этой таблице, ответьте на два вопроса и выполните задание.\n\n1.  Определите, сколько учеников, которые проходили тестирование по информатике, набрали более 600 баллов. Ответ запишите в ячейку H2 таблицы.\n\n2.  Найдите средний тестовый балл учеников, которые проходили тестирование по информатике. Ответ запишите в ячейку H3 таблицы с точностью не менее двух знаков после запятой.\n\n3.  Постройте круговую диаграмму, отображающую соотношение числа участников из округов с кодами «В», «Зел» и «З». Левый верхний угол диаграммы разместите вблизи ячейки G6.\n\nРешение.\n\n1.  Запишем в ячейку E2 следующую формулу =ЕСЛИ(И(D2>600; C2='информатика');D2;0) и скопируем ее в диапазон E3:E1001. Применив операцию =ЕСЛИ(E2>0;1;0), получим столбец (F): с единицами и нулями. Далее, используем операцию =СУММ(F2:F1001). Получим количество учеников, которые проходили тестирование по информатике и набрали более 600 баллов. Таких 32 человека.\n\n2.  Для ответа на второй вопрос используем операцию «ЕСЛИ». Запишем в ячейку G2 следующее выражение: =ЕСЛИ(C2='информатика'; D2;0), в результате применения данной операции к диапазону ячеек G2:G1001, получим столбец, в котором записаны баллы только учеников, сдававших информатику. Сложив значения в ячейках, получим сумму баллов учеников: 39 371. Найдем количество учеников, сдававших информатику, с помощью команды =СЧеТЕСЛИ(C2:C1001;'информатика'), получим 72. Разделив сумму баллов на количество учеников, получим: 546,8194  —  искомый средний балл.\n\n3.  В ячейку J2 вставим формулу =СЧеТЕСЛИ(A2:A1001; 'В'), в ячейку J3 вставим формулу =СЧеТЕСЛИ(A2:A1001; 'Зел'), в ячейку J4 вставим формулу =СЧеТЕСЛИ(A2:A1001; 'З'). Теперь построим по полученным значениям круговую диаграмму, подпишем сектора.\n\nОтвет: 1) 32; 2) 546,82.",
            "image": "image_14_1.png"
        }
    },
    "15": {
        "1": {
            "text": "15.1 Исполнитель Робот умеет перемещаться по лабиринту, начерченному на плоскости, разбитой на клетки. Между соседними (по сторонам) клетками может стоять стена, через которую Робот пройти не может. У Робота есть девять команд. Четыре команды  — это команды-приказы:\n\nвверх вниз влево вправо\n\nПри выполнении любой из этих команд Робот перемещается на одну клетку соответственно: вверх ↑ вниз ↓, влево ← , вправо →. Если Робот получит команду передвижения сквозь стену, то он разрушится. Также у Робота есть команда закрасить, при которой закрашивается клетка, в которой Робот находится в настоящий момент.\n\nЕще четыре команды  — это команды проверки условий. Эти команды проверяют, свободен ли путь для Робота в каждом из четырех возможных направлений:\n\nсверху свободно  снизу свободно  слева свободно  справа свободно\n\nЭти команды можно использовать вместе с условием «если», имеющим следующий вид:\n\nесли условие то\n\nпоследовательность команд\n\nвсе\n\n \n\nЗдесь условие  — одна из команд проверки условия. Последовательность команд  — это одна или несколько любых команд-приказов. Например, для передвижения на одну клетку вправо, если справа нет стенки, и закрашивания клетки можно использовать такой алгоритм:\n\nесли справа свободно то\n\nвправо\n\nзакрасить\n\nвсе\n\n \n\nВ одном условии можно использовать несколько команд проверки условий, применяя логические связки и, или, не, например:\n\nесли (справа свободно) и (не снизу свободно) то\n\nвправо\n\nвсе\n\n \n\nДля повторения последовательности команд можно использовать цикл «пока», имеющий следующий вид:\n\nнц пока условие\n\nпоследовательность команд\n\nкц\n\n \n\nНапример, для движения вправо, пока это возможно, можно использовать следующий алгоритм:\n\nнц пока справа свободно\n\nвправо\n\nкц\n\n \n\n \n\nВыполните задание.\n\nНа бесконечном поле есть горизонтальная и вертикальная стены. Правый конец горизонтальной стены соединен с верхним концом вертикальной стены. Длины стен неизвестны. В каждой стене есть ровно один проход, точное место прохода и его ширина неизвестны. Робот находится в клетке, расположенной непосредственно под горизонтальной стеной у ее левого конца. На рисунке указан один из возможных способов расположения стен и Робота (Робот обозначен буквой «Р»).\n\nНапишите для Робота алгоритм, закрашивающий все клетки, расположенные непосредственно ниже горизонтальной стены и левее вертикальной стены. Проходы должны остаться незакрашенными. Робот должен закрасить только клетки, удовлетворяющие данному условию. Например, для приведенного выше рисунка Робот должен закрасить следующие клетки (см. рис.).\n\nПри исполнении алгоритма Робот не должен разрушиться, выполнение алгоритма должно завершиться. Конечное расположение Робота может быть произвольным. Алгоритм должен решать задачу для любого допустимого расположения стен и любого расположения и размера проходов внутри стен. Алгоритм может быть выполнен в среде формального исполнителя или записан в текстовом редакторе. \n\nСохраните алгоритм в текстовом файле.\n\n\n\n15.2 Напишите программу, которая в последовательности натуральных чисел определяет максимальное число, кратное 5. Программа получает на вход количество чисел в последовательности, а затем сами числа. В последовательности всегда имеется число, кратное 5. Количество чисел не превышает 1000. Введенные числа не превышают 30 000. Программа должна вывести одно число  — максимальное число, кратное 5.\n\n\n\nРешение.\n\n15.1 Следующий алгоритм выполнит требуемую задачу.\n\n \n\nнц пока не сверху свободно\n\nзакрасить\n\nвправо\n\nкц\n\n \n\nнц пока сверху свободно\n\nвправо\n\nкц\n\n \n\nнц пока справа свободно\n\nзакрасить\n\nвправо\n\nкц\n\n \n\nнц пока не справа свободно\n\nзакрасить\n\nвниз\n\nкц\n\n \n\nнц пока справа свободно\n\nвниз\n\nкц\n\n \n\nнц пока не справа свободно\n\nзакрасить\n\nвниз\n\nкц\n\n\n\n15.2 Решение\n\nvar k, n, a, amax: integer;\n\nbegin\n\namax:=0;\n\nreadln(n);\n\nfor k:=1 to n do\n\nbegin\n\nreadln(a);\n\nif (a mod 5 = 0) and (a>amax) then\n\namax:=a;\n\nend;\n\nwriteln(amax);\n\nend.",
            "image": "image_15_1.png"
        }
    }
}
